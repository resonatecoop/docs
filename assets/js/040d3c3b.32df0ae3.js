"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[586],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,k=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return n?a.createElement(k,i(i({ref:t},p),{},{components:n})):a.createElement(k,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4469:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:1,title:"API"},i=void 0,l={unversionedId:"active-development/api",id:"active-development/api",title:"API",description:"Explore the api repository...",source:"@site/docs/active-development/api.md",sourceDirName:"active-development",slug:"/active-development/api",permalink:"/docs/active-development/api",draft:!1,editUrl:"https://github.com/resonatecoop/api/edit/main/README.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"API"},sidebar:"tutorialSidebar",previous:{title:"Tutorial - Active Development",permalink:"/docs/category/tutorial---active-development"},next:{title:"Beam",permalink:"/docs/active-development/beam"}},c={},s=[{value:"Getting started with local dev",id:"getting-started-with-local-dev",level:2},{value:"Docs",id:"docs",level:2},{value:"Workers (Uploading Music, Images, Etc)",id:"workers-uploading-music-images-etc",level:2},{value:"Docker tips &amp; tricks",id:"docker-tips--tricks",level:2},{value:"Resetting the database",id:"resetting-the-database",level:3},{value:"Conflicting PGSQL",id:"conflicting-pgsql",level:3},{value:"Authentication",id:"authentication",level:2}],p={toc:s};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Explore the ",(0,r.kt)("code",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/resonatecoop/api"},"api"))," repository..."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\ud83d\udee0 ",(0,r.kt)("strong",{parentName:"p"},"Status: Active Development | Experimental")),(0,r.kt)("p",{parentName:"blockquote"},"This project is currently broken and under very active development.")),(0,r.kt)("h1",{id:"tracks-api-v4-lol"},"Tracks API (v4 lol)"),(0,r.kt)("p",null,"A rewrite of the Resonate tracks api, but with one database to rule them all."),(0,r.kt)("h2",{id:"getting-started-with-local-dev"},"Getting started with local dev"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git clone <repo>\ncd <repo>\ncp .env.example .env\ncp jwk-keys.json.example jwk-keys.json\ncp cookies-keys.json.example cookies-keys.json\n\ndocker-compose up\n")),(0,r.kt)("p",null,"Migrations should have run as part of ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose up")),(0,r.kt)("p",null,"Seed the data"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"yarn docker:seed:all\n")),(0,r.kt)("h2",{id:"docs"},"Docs"),(0,r.kt)("p",null,"Swagger generates docs, you can see them at: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"http://localhost:4000/docs\n")),(0,r.kt)("h2",{id:"workers-uploading-music-images-etc"},"Workers (Uploading Music, Images, Etc)"),(0,r.kt)("p",null,"If you want to upload music or upload images, you'll need a worker running."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"docker exec -it resonate-api node src/jobs/queue-worker.js run convert-audio\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"TODO: we should look into setting this up so that it starts running automatically on ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose up"),". The ",(0,r.kt)("em",{parentName:"p"},"right")," way to do this is probably to set up a container that launches the job.")),(0,r.kt)("h2",{id:"docker-tips--tricks"},"Docker tips & tricks"),(0,r.kt)("p",null,"Hard rebuild the docker container"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"sudo rm -rf data/ && docker-compose up --build\n")),(0,r.kt)("p",null,"Poke around the resonate db"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"docker ps # look for the resonate pgsql container name\ndocker exec -it <resonate-pgsql-container-name> psql -U resonate\n")),(0,r.kt)("h3",{id:"resetting-the-database"},"Resetting the database"),(0,r.kt)("p",null,"This will need to be run to reset the database periodically while migrations are still being squared away."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"yarn docker:migrate:undo:all\nyarn docker:migrate\nyarn docker:seed:all\n")),(0,r.kt)("h3",{id:"conflicting-pgsql"},"Conflicting PGSQL"),(0,r.kt)("p",null,"It might be that you already have postgres installed on your machine, in which case the exposed postgres port by docker causes a conflict. "),(0,r.kt)("p",null,"In that case set ",(0,r.kt)("inlineCode",{parentName:"p"},"POSTGRES_LOCAL_MACHINE_PORT")," in ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," so a different number, like ",(0,r.kt)("inlineCode",{parentName:"p"},"5433")),(0,r.kt)("h2",{id:"authentication"},"Authentication"),(0,r.kt)("p",null,"We use OpenID and the oidc-provider library to provide identity. Check out the documentation in ",(0,r.kt)("inlineCode",{parentName:"p"},"src/auth/README.md")))}d.isMDXComponent=!0}}]);